---
import CardItem from "./CardItem.astro";
import dataCoffee from "../data/dataCoffe";
interface Props {
  page: Boolean;
}

const { page } = Astro.props;
// Filtrar de archivo js todos los productos que esten disponibles
const newCof = dataCoffee.filter((dat) => dat.available);
---

<div class="cards">
  {
    // Renderizar todos los productos de la pgina si la prop page esta false
    !page
      ? dataCoffee.map((dat) => (
          <CardItem
            name={dat.name}
            image={dat.image}
            price={dat.price}
            available={dat.available}
            popular={dat.popular}
            votes={dat.votes}
            rate={JSON.stringify(dat.rating)}
          />
        ))
      : // Renderizar solo lo productos que esten disponible en la otra pagina
        newCof.map((dat) => (
          <CardItem
            name={dat.name}
            image={dat.image}
            price={dat.price}
            available={dat.available}
            popular={dat.popular}
            votes={dat.votes}
            rate={JSON.stringify(dat.rating)}
          />
        ))
  }
</div>

<style>
  .cards {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: 1fr;
    gap: 40px;
  }
  /* Modo Tableta */
  @media screen and (max-width: 1024px) {
    .cards {
      grid-template-columns: 1fr 1fr;
    }
  }
  /* Modo Mobile */
  @media screen and (max-width: 640px) {
    .cards {
      grid-template-columns: 1fr;
    }
  }
</style>
